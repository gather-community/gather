en:
  activerecord:
    models:
      meals/meal: "Meal"
    attributes:
      user:
        first_name: "First Name"
        last_name: "Last Name"
        email: "Email Address"
        google_email: "Google ID"
        phone: "Phone"
        mobile_phone: "Mobile"
        home_phone: "Home"
        work_phone: "Work"
        birthday_str: "Birthday"
        preferred_contact: "Preferred Contact"
        joined_on: "Join Date"
        job_choosing_proxy_id: "Job Choosing Proxy"
        up_guardianships: "Parents/Guardians"
        privacy_settings: "Privacy Settings"
        paypal_email: "PayPal Email"
        school: "School"
        allergies: "Allergies"
        doctor: "Doctor Info"
        medical: "Medical Info"
        remember_me: "Stay signed in after you close your browser"
        child: "User is a child?"
        full_access: "User should have full access to the system?"
        certify_13_or_older: "I certify that this user is 13 years of age or older"
        pronouns: "Pronouns"
      household:
        name: "Household Name"
        community_id: "Community"
        member_type_id: "Member Type"
        unit_num_and_suffix: "Unit Number"
        vehicles: "Vehicles"
        keyholders: "Extra Unit Keyholders"
        emergency_contacts: "Emergency Contacts"
        garage_nums: "Garage Number(s)"
      meals/meal:
        no_allergens: "None of these"
        community_id: "Host Community"
        served_at: "Date/Time"
        communities: "Communities"
        calendar_ids: "Reservable Location(s)"
        formula: "Formula"
        capacity: "Capacity"
        title: "Title"
        entrees: "Entrees"
        side: "Side"
        kids: "Kids"
        dessert: "Dessert"
        notes: "Notes"
        auto_close_time: "Auto-Close Time"
      meals/message:
        meal: "Meal"
        body: "Message"
        recipient_type: "Recipients"
      meals/cost:
        ingredient_cost: "Ingredient Cost"
        pantry_cost: "Pantry Reimbursable Cost"
        payment_method: "Reimbursement Method"
        reimbursee_id: "Reimbursee"
      meals/formula:
        name: "Name"
        meal_calc_type: "Calculation Type"
        pantry_calc_type: "Calculation Type"
        is_default: "Default formula?"
        parts: "Meal Types"
        pantry_fee_formatted: "Pantry Fee"
        pantry_reimbursement: "Allow pantry reimbursement?"
        takeout: "Allow takeout requests?"
        role_ids: "Roles"
      meals/formula_part:
        type_id: "Type"
        share_formatted: "Price/Share"
        portion_size: "Portion Size"
      meals/role:
        title: "Job Title"
        time_type: "Times"
        shift_start: "Start Time"
        shift_end: "End Time"
        work_hours: "Work Hours"
        work_job_title: "Work Job Title"
        description: "Job Description"
        double_signups_allowed: "The same person can sign up more than once for this role in a single meal"
        count_per_meal: "People per Meal"
        reminders: "Reminders"
      meals/role_reminder:
        rel_magnitude: "Send Time"
        note: "Note (optional)"
      meals/signup:
        spots_left: "Spots Left"
        comments: "Comments for Cook"
        takeout: "Request takeout"
      billing/transaction:
        incurred_on: "Date Incurred"
        household_name: "Household Name"
        code: "Type"
        description: "Description"
        value: "Amount"
      billing/account:
        household_id: "Household"
        community_id: "Community Account"
        current_balance: "Current Balance"
        credit_limit: "Credit Limit"
      billing/template:
        code: "Type"
        description: "Description"
        value: "Amount"
        member_type_ids: "Member Types"
      gdrive/migration/consent_request:
        opt_out_reason: "Opt Out Reason"
      groups/group:
        availability: "Availability"
        can_request_jobs: "Can request jobs?"
        can_administer_email_lists: "Can administer all email lists?"
        can_moderate_email_lists: "Can moderate all email lists?"
        description: "Description"
        kind: "Type"
        name: "Name"
        communities: "Communities"
        memberships: "Members"
      groups/mailman/list:
        domain_id: "Domain"
        managers_can_administer: "Managers can administer list?"
        managers_can_moderate: "Managers can moderate list?"
        members: "List Members"
        additional_members: "Additional Members"
        additional_senders: "Additional Senders"
        settings: "List Settings"
        address: "List Address"
        _destroy: "Delete this list?"
      calendars/protocol:
        fixed_end_time: "Fixed End Time"
        fixed_start_time: "Fixed Start Time"
        kinds: "Event Types"
        max_days_per_year: "Max. Days/Year"
        max_lead_days: "Max. Advance Time"
        max_length_minutes: "Max. Duration"
        max_minutes_per_year: "Max. Minutes/Year"
        other_communities: "Other Communities"
        pre_notice: "Pre-notice"
        requires_kind: "Type Required"
        calendar_ids: "Calendars"
      calendars/group:
        name: "Group Name"
      calendars/event:
        calendar: "Calendar"
        pre_notice: "Notice"
        name: "Event Name"
        starts_at: "Start Time"
        ends_at: "End Time"
        creator: "Creator"
        group: "Group"
        all_day: "All-day event?"
        kind: "Type"
        note: "Note"
        guidelines: "Guidelines"
      calendars/calendar:
        name: "Name"
        guidelines: "Guidelines"
        hidden: "Hidden"
        abbrv: "Abbreviation"
        group_id: "Calendar Group"
        color: "Color"
        default_calendar_view: "Calendar View"
        meal_hostable: "Can host meals?"
        allow_overlap: "Events can overlap each other?"
        selected_by_default: "Selected by default in calendar list?"
      people/emergency_contact:
        name: "Name"
        relationship: "Relationship to Household"
        main_phone: "Main Phone"
        alt_phone: "Alternate Phone"
        email: "Email"
        location: "Location"
        country_code: "Country"
      people/vehicle:
        make: "Make"
        model: "Model"
        color: "Color"
        plate: "License Plate"
      people/pet:
        name: "Name"
        species: "Species/Breed"
        color: "Color"
        vet: "Veterinarian Info"
        caregivers: "Caregiver Info"
        health_issues: "Health Issues"
      people/memorial:
        user_id: "Deceased Person"
        birth_year: "Birth Year"
        death_year: "Death Year"
      work/job:
        description: "Description"
        double_signups_allowed: "Same person can sign up more than once for a shift of this job?"
        hours: "Hours"
        hours_per_shift: "Hours per Shift"
        period_id: "Period"
        reminders: "Reminders"
        requester_id: "Requester"
        shifts: "Shifts"
        slot_type: "Slot Type"
        time_type: "Times"
        title: "Title"
      work/period:
        name: "Name"
        phase: "Phase"
        starts_on: "Starts On"
        ends_on: "Ends On"
        quota_type: "Quota"
        auto_open_time: "Auto-Open Time"
        pick_type: "Pick Type"
        round_duration: "Round Duration"
        workers_per_round: "Workers per Group"
        max_rounds_per_worker: "Max. Rounds per Worker"
        job_copy_source_id: "Job Copy"
        copy_preassignments: "Copy pre-assignments?"
        meal_job_sync_settings: "Meal Job Sync"
      work/job_reminder:
        abs_rel: "Type"
        abs_time: "Send Time"
        rel_magnitude: "Send Time"
        note: "Note"
      work/shift:
        start_time: "Start Time"
        end_time: "End Time"
        hours: "Hours"
        slots: "# of Slots"
        workers: "Workers"
      wiki/page:
        title: "Title"
        content: "Content"
        comment: "Comment"
        editable_by: "Editable By"
        data_source: "Data Source"
    errors:
      messages:
        invalid_content_type: "File is incorrect type"
        too_big: "File is too big (maximum %{max} MiB)"
        attached: "File is missing"
      models:
        groups/group:
          attributes:
            base:
              at_least_one_affiliation: "Please select at least one community"
        groups/mailman/list:
          attributes:
            name:
              invalid: "Contains invalid characters"
        groups/membership:
          attributes:
            user_id:
              unaffiliated: "Not from an affiliated community"
        household:
          name:
            taken: "There is already a household with this name at this community"
        meals/formula_part:
          negative: "Must be non-negative"
        meals/signup:
          exceeded_spots:
            one: "Based on the number of spots remaining, you can only sign up one person."
            other: "Based on the number of spots remaining, you can sign up a maximum of %{count} people."
        calendars/event:
          attributes:
            starts_at:
              after_meal_time: "must be at or before the meal time (%{time})"
            ends_at:
              before_meal_time: "must be after the meal time (%{time})"
        user:
          password:
            password_strength: "Your password was too weak. Try making it longer or adding special characters."
          attributes:
            certify_13_or_older:
              accepted_full_access: "Age certification is required for children with full access"
              accepted_becoming_adult: "Age certification is required for changing child to adult"
            birthday_str:
              too_young: "Children must be 13 years of age or older to have full access"
        calendars/calendar:
          attributes:
            abbrv:
              blank: "can't be blank if calendar can host meals"
            color:
              invalid: "Must be in hex format (e.g. #112233)"
        meals/formula:
          at_least_one_type: "You must include at least one meal type."
          at_least_one_nonzero_type: "You must include at least one non-zero meal type if the calculation type is proportional."
          attributes:
            is_default:
              cant_unset: "You can't unset default. Set another formula to default instead."
            role_ids:
              must_have_head_cook: "Must include %{title}"
        meals/role:
          attributes:
            shift_end:
              not_after_start: "Must be after start time"
        wiki/page:
          sample_not_editable: "The sample page is not editable so that it remains intact as a reference for other users. If you would like to experiment, try creating a new page using the 'New Wiki Page' link below."
          data_fetch:
            main: "There was a problem fetching data for this page (%{error})"
            socket_error: "Couldn't connect to server"
            invalid_json: "Invalid JSON"
            template_error: "Template Error: %{details}"
          attributes:
            title:
              reserved_slug: "This title is a special reserved word or phrase. Please choose another."
        work/job:
          attributes:
            hours_per_shift:
              uneven_divisor: "Must equal or evenly divide %{hours} hours"
            shifts:
              more_than_one_shift_for_full_single: "You can only add one shift for single shift jobs."
              more_than_one_shift_for_full_period: "You can only add one shift for whole period jobs."
              duplicate_start_end_times: "Multiple shifts can't have identical start and end times."
              different_length_shifts: "All shfits must be the same length."
        work/period:
          attributes:
            ends_on:
              not_after_start: "must be after start date"
            auto_open_time:
              blank: "Can't be blank if pick type is 'take turns'. If you don't know the exact time yet, enter something approximate and update it later."
        work/shift:
          attributes:
            starts_at:
              elapsed_doesnt_equal_job: "Shift must last for %{hours} hours"
              elapsed_doesnt_evenly_divide_job: "Shift length must equal or evenly divide %{hours} hours"
            ends_at:
              not_after_start: "must be after start time"
            assignments:
              no_double_assignments: "Duplicate assignees not allowed"
