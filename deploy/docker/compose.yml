name: gather-stack

services:
  gather:
    build:
      context: ../../
      dockerfile: Dockerfile.dev
      target: dev-base
    restart: always
    command: bin/dev
    env_file:
      - .env
      - .env.local
      - .env.gather
    networks:
      - gather
    profiles:
      - full
      - gather
    ports:
      - '3000:3000'
  
  delayed-job:
    build:
      context: ../../
      dockerfile: Dockerfile.dev
      target: dev-base
    restart: always
    command: bin/delayed_job run
    env_file:
      - .env
      - .env.local
      - .env.gather
    networks:
      - gather
    profiles:
      - full
      - delayed

  postgres:
    image: postgres:16.1
    container_name: pg
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER:-dev}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    env_file: .env
    environment:
      PGSSLMODE: "disable"
    ports:
      - "5432:5432"
    networks:
      - gather
    logging:
      driver: none
    profiles:
      - full
      - data
  
  provision:
    build:
      context: ../../
      dockerfile: Dockerfile.dev
      target: dev-base
    command:
      - /bin/bash
      - -c
      - |
        rake db:create
        rake db:schema:load
        rake db:new_cluster ADMIN_FNAME="$$GATHER_ADMIN_FNAME" ADMIN_LNAME="$$GATHER_ADMIN_LNAME" ADMIN_EMAIL="$$GATHER_ADMIN_EMAIL" SUPER_ADMIN=y
    env_file:
      - .env
      - .env.local
      - .env.gather
    networks:
      - gather
    profiles:
      - provision

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
    networks:
      - gather
    ports:
      - "9200:9200"
      - "9300:9300"
    profiles:
      - full
      - data
    
  redis:
    image: redis:7.2.3
    restart: always
    env_file: .env
    ports:
      - '6379:6379'
    command: redis-server
    networks:
      - gather
    profiles:
      - full
      - data
  
  minio:
    image: docker.io/bitnami/minio:2023
    ports:
      - '9000:9000'
      - '9001:9001'
    networks:
      - gather
    env_file: .env
    profiles:
      - full
      - data
  
  mailcatcher:
    restart: on-failure
    image: dockage/mailcatcher:0.9.0
    ports:
      - "1080:1080"
      - "1025:1025"
    networks:
      - gather
    profiles:
      - full
      - data

networks:
  gather: